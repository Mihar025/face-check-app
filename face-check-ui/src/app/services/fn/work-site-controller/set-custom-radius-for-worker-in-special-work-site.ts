/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { SetNewCustomRadiusForWorkerInSpecialWorkSiteResponse } from '../../models/set-new-custom-radius-for-worker-in-special-work-site-response';
import { SetNewCustomRadiusRequest } from '../../models/set-new-custom-radius-request';

export interface SetCustomRadiusForWorkerInSpecialWorkSite$Params {
  workSiteId: number;
  workerId: number;
      body: SetNewCustomRadiusRequest
}

export function setCustomRadiusForWorkerInSpecialWorkSite(http: HttpClient, rootUrl: string, params: SetCustomRadiusForWorkerInSpecialWorkSite$Params, context?: HttpContext): Observable<StrictHttpResponse<SetNewCustomRadiusForWorkerInSpecialWorkSiteResponse>> {
  const rb = new RequestBuilder(rootUrl, setCustomRadiusForWorkerInSpecialWorkSite.PATH, 'post');
  if (params) {
    rb.path('workSiteId', params.workSiteId, {});
    rb.path('workerId', params.workerId, {});
    rb.body(params.body, 'application/json');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<SetNewCustomRadiusForWorkerInSpecialWorkSiteResponse>;
    })
  );
}

setCustomRadiusForWorkerInSpecialWorkSite.PATH = '/workSite/{workSiteId}/custom-radius/{workerId}';
